docker-compose -down

교안 : queryHistoryForCar
수업 : getHistoryForcar

하이퍼레져 패브릭 샘플네트워크

설치는 피어
배포는 채널

설치만 되어있으면 렛저가 생성 x
배포까지 완료 -> 렛저 생성

배포 -P(option) : 보증 청책

orderer먼저 구축 -> c1, c2를 만들어 구성 -> 노드 p1 = c1, 노드 p2 = c2, p3 = ledgerL2
-> NC4 정책규칙 R1,R4 관리 =>CA가 각 기관마다 소유

■키컨셉 항목
Identity(인증서, CA구조, PKI-> 보안)
Peers => 체널 가입(Join)
원장에서 가지는 DATA - world State, Private Data, Blockchain
체인 코드 -> 설치, 채널별 원장
트렌잭션 => tx시뮬 => 보증 => APP => orderer
Q. 1개의 피어에 여러개의 channel에 Join될 수 있다.
- 채널이 나뉘면 같은 피어를 배포받아도 다른 원장을 가진다

-Identity : 자기 자신을 증명하는 기술
 	=> 인증서, 인증기관 존재(PKI) -> MSP(peer, orderer,ca, 사용자관리자)
PKI구성 - 인증서, 인증기관(ca)
	=> 발급대상 : 서비스 사용자, 서비스 제공자(프로그램)
	=> 인증서를 메시지 교환시 상호인증 교환
Certificate Revocation List(CRL) - 더이상 유효하지 않은 취소된 인증 리스트
		=> 인증리스트(white), Revocation리스트(Black)

공동인증서(=공인인증서)
- 서비스 사용자(Mary), 서비스 제공자(Morris)에서 발급된 것이다.
- 공개키, 비밀서명키(서명키는 개인적으로 보호되야함.)

CA
- 인증기관은 인증서를 여러사람에게 발급
MSP 구성 다시한번 보기

■Peers
- 블록체인을 구성하는 기본 요소, ledger와 smartcontract(chaincode) 복사본 소유
Ledger구조
- BlockChain(삭제 불가능) + World State(삭제 가능) + private data(삭제 가능)
- 생성, 수정, 삭제시 블록생성
D의 해쉬를 world state에 저장 => 블록 생성(이력 관리)

블록이 기록되는 내용 => -SMART COONTRACT, DATA, 생성, 수정, 삭제 기록
			- SMC(SMART CONTRACT) 배포 기록
			- ch생성 기록, 네트워크 중요설정 기록
APPlications and Peers
- tx생성(처리, 조회)
	선행조건 : 1. 인증서(CA) 소지 2. 채널에 스마트 컨트렉트 배포 되어있어야함
1.peer에 connection
2.GW(gateway)에 연결
3.Ch(mychannel)연결
4.CC(chaincode)fabcar
5.submittrasaction : "createCar","benz","CLS400","white"
6.endorser peer(보증 피어) 스마트 컨트랙트 배포할때 : -P
	Simulation(수행) - r/w(read/wright)+서명
7.invoke chaincode(invoke : chaincode에서 함수수행)  	7. query chaincode(뒤에거 생략 가능)
8.proposal response
9.오더(Order) 보안검사, 서명, 동기화 => block생성
10.업데이트

이유 : 멀티체인 방지( 리더가 존재해야한다 )


